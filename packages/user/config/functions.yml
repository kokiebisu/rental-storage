# Graphql
## Query
findGuestById:
  handler: dist/adapter/graphql/query/findGuestById.handler
  name: ${self:custom.namespace}-${self:custom.service}-graphql-findGuestById
  environment:
    MYSQL_HOST: ${self:custom.AURORA_HOST}
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.DB_USERNAME}
    PASSWORD: ${self:custom.DB_PASSWORD}

findHostById:
  handler: dist/adapter/graphql/query/findHostById.handler
  name: ${self:custom.namespace}-${self:custom.service}-graphql-findHostById
  environment:
    MYSQL_HOST: ${self:custom.AURORA_HOST}
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.DB_USERNAME}
    PASSWORD: ${self:custom.DB_PASSWORD}
## Mutation
registerGuest:
  handler: dist/adapter/graphql/mutation/registerGuest.handler
  name: ${self:custom.namespace}-${self:custom.service}-graphql-registerGuest
  environment:
    MYSQL_HOST: ${self:custom.AURORA_HOST}
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.DB_USERNAME}
    PASSWORD: ${self:custom.DB_PASSWORD}
registerHost:
  handler: dist/adapter/graphql/mutation/registerHost.handler
  name: ${self:custom.namespace}-${self:custom.service}-graphql-registerHost
  environment:
    MYSQL_HOST: ${self:custom.AURORA_HOST}
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.DB_USERNAME}
    PASSWORD: ${self:custom.DB_PASSWORD}
removeGuestById:
  handler: dist/adapter/graphql/mutation/removeGuestById.handler
  name: ${self:custom.namespace}-${self:custom.service}-graphql-removeGuestById
  environment:
    MYSQL_HOST: ${self:custom.AURORA_HOST}
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.DB_USERNAME}
    PASSWORD: ${self:custom.DB_PASSWORD}
removeHostById:
  handler: dist/adapter/graphql/mutation/removeHostById.handler
  name: ${self:custom.namespace}-${self:custom.service}-graphql-removeHostById
  environment:
    MYSQL_HOST: ${self:custom.AURORA_HOST}
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.DB_USERNAME}
    PASSWORD: ${self:custom.DB_PASSWORD}
# # Consumer
# ## SQS
consumeBookingCreated:
  handler: dist/adapter/consumer/booking/bookingCreated.handler
  name: ${self:custom.namespace}-${self:custom.service}-consumer-bookingCreated
  events:
    - sqs:
        enabled: true
        arn:
          Fn::GetAtt:
            - SQSQueue
            - Arn
