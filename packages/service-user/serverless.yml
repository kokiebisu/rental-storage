service: rent-a-locker-user
frameworkVersion: "3"

plugins:
  - serverless-deployment-bucket
  # - serverless-domain-manager

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  lambdaHashingVersion: 20201221
  iam:
    role: !ImportValue ExportedLambdaRoleArn
  apiGateway:
    restApiId: !ImportValue ApiGatewayRestApiId
    restApiRootResourceId: !ImportValue ApiGatewayRootResourceId
  deploymentBucket:
    name: rent-a-locker-user-resources

custom:
  namespace: rent-a-locker
  service: user
  # customDomain:
  #   domainName: "api.mycompany.com"
  #   basePath: "user"
  #   stage: ${self:provider.stage}
  #   createRoute53Record: true
  DB_NAME: !ImportValue ExportedUserRDSDBName
  DB_USERNAME: !ImportValue ExportedUserRDSDBUsername
  DB_PASSWORD: !ImportValue ExportedUserRDSDBPassword
  DB_HOST: !ImportValue ExportedUserRDSDBHost
  SERVICE_API_ENDPOINT:
    Fn::Join:
      - ""
      - - "https://"
        - ${self:provider.apiGateway.restApiId}
        - ".execute-api."
        - ${self:provider.region}
        - ".amazonaws.com/"
        - ${self:provider.stage}

functions:
  - ${file(./aws/functions/apigateway.yml)}
  - ${file(./aws/functions/appsync.yml)}
