// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	item "github.com/kokiebisu/rental-storage/service-user/internal/core/domain/item"
	mock "github.com/stretchr/testify/mock"
)

// ItemFactory is an autogenerated mock type for the ItemFactory type
type ItemFactory struct {
	mock.Mock
}

// New provides a mock function with given fields: name, ownerId, spaceId
func (_m *ItemFactory) New(name string, ownerId string, spaceId string) item.Entity {
	ret := _m.Called(name, ownerId, spaceId)

	var r0 item.Entity
	if rf, ok := ret.Get(0).(func(string, string, string) item.Entity); ok {
		r0 = rf(name, ownerId, spaceId)
	} else {
		r0 = ret.Get(0).(item.Entity)
	}

	return r0
}

type mockConstructorTestingTNewItemFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewItemFactory creates a new instance of ItemFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewItemFactory(t mockConstructorTestingTNewItemFactory) *ItemFactory {
	mock := &ItemFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
