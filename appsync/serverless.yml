service: infrastructure-appsync
configValidationMode: error

plugins:
  - serverless-appsync-plugin
  - serverless-deployment-bucket

provider:
  name: aws
  stage: local
  region: us-east-1
  deploymentBucket:
    name: ${self:provider.stage}-${aws:accountId}-sls-infrastructure-appsync

custom:
  namespace: app
  service: api-appsync

appSync:
  name: ${self:custom.namespace}-${self:custom.service}

  apiKeys:
    - name: web
      description: Web Client
      expiresAfter: 365d

  authentication:
    type: "API_KEY"

  additionalAuthentications:
    - type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${aws:region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-authorizer
        authorizerResultTtlInSeconds: 0

  schema:
    - schema/*.graphql

  dataSources:
    # Booking
    FindBookingFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-find-booking
    FindBookingsFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-find-bookings
    BookingCreateFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-create-booking
    BookingAcceptFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-accept-booking

    # Space
    FindSpaceFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-find-space
    FindSpacesFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-find-spaces
    SpaceCreateFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-create-space
    SpaceDeleteFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-delete-space

    # Image
    GetPresignedURLFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-get-presigned-url

    # User
    ProfileFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-find-me
    FindUserFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-find-user
    DeleteUserFn:
      type: AWS_LAMBDA
      config:
        functionArn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:provider.stage}-${self:custom.namespace}-composition-delete-user

  pipelineFunctions:
    # Booking
    BookingCreateFn:
      dataSource: BookingCreateFn
    BookingAcceptFn:
      dataSource: BookingAcceptFn
    FindBookingFn:
      dataSource: FindBookingFn
    FindBookingsFn:
      dataSource: FindBookingsFn

    # Space
    FindSpaceFn:
      dataSource: FindSpaceFn
    FindSpacesFn:
      dataSource: FindSpacesFn
    SpaceCreateFn:
      dataSource: SpaceCreateFn
    SpaceDeleteFn:
      dataSource: SpaceDeleteFn

    # Image
    GetPresignedURLFn:
      dataSource: GetPresignedURLFn

    # User
    ProfileFn:
      dataSource: ProfileFn
    FindUserFn:
      dataSource: FindUserFn
    DeleteUserFn:
      dataSource: DeleteUserFn

  resolvers:
    # Booking
    Query.booking:
      request: ./resolvers/booking/query.booking.vtl
      response: ./resolvers/response.vtl
      functions:
        - FindBookingFn
    Query.bookings:
      request: ./resolvers/booking/query.bookings.vtl
      response: ./resolvers/response.vtl
      functions:
        - FindBookingsFn
    Mutation.bookingCreate:
      request: ./resolvers/booking/mutation.bookingCreate.vtl
      response: ./resolvers/response.vtl
      functions:
        - BookingCreateFn
    Mutation.bookingAccept:
      request: ./resolvers/booking/mutation.bookingAccept.vtl
      response: ./resolvers/response.vtl
      functions:
        - BookingAcceptFn

    # Space
    Query.space:
      request: ./resolvers/space/query.space.vtl
      response: ./resolvers/response.vtl
      functions:
        - FindSpaceFn

    Query.spaces:
      request: ./resolvers/space/query.spaces.vtl
      response: ./resolvers/response.vtl
      functions:
        - FindSpacesFn

    Mutation.spaceCreate:
      request: ./resolvers/space/mutation.spaceCreate.vtl
      response: ./resolvers/response.vtl
      functions:
        - SpaceCreateFn

    Mutation.spaceDelete:
      request: ./resolvers/space/mutation.spaceDelete.vtl
      response: ./resolvers/response.vtl
      functions:
        - SpaceDeleteFn

    # Image
    Query.getPresignedURL:
      request: ./resolvers/image/query.getPresignedURL.vtl
      response: ./resolvers/response.vtl
      functions:
        - GetPresignedURLFn

    Query.profile:
      request: ./resolvers/user/query.profile.vtl
      response: ./resolvers/response.vtl
      functions:
        - ProfileFn

    Query.user:
      request: ./resolvers/user/query.user.vtl
      response: ./resolvers/response.vtl
      functions:
        - FindUserFn

    ## User
    Mutation.userDelete:
      request: ./resolvers/user/mutation.userDelete.vtl
      response: ./resolvers/response.vtl
      functions:
        - DeleteUserFn
