service: rental-storage-infrastructure
frameworkVersion: "3"

useDotenv: true

plugins:
  - serverless-export-outputs
  - serverless-deployment-bucket

provider:
  name: aws
  region: us-east-1
  stage: dev
  deploymentBucket:
    name: rental-storage-infrastructure-resources

custom:
  namespace: rental-storage
  USER_DB_NAME: user
  USER_DB_USERNAME: master
  USER_DB_PASSWORD: password
  ITEM_DB_NAME: item
  ITEM_DB_USERNAME: master
  ITEM_DB_PASSWORD: password
  LISTING_DB_NAME: listing
  LISTING_DB_USERNAME: master
  LISTING_DB_PASSWORD: password
  BOOKING_TABLE_NAME: booking

resources:
  Resources:
    ApiGateway: ${file(./aws/resources/apigateway.yml)}

    # Infrastructure
    VPC: ${file(./aws/resources/network/VPC.yml)}
    VPCGatewayAttachment: ${file(./aws/resources/network/VPCGatewayAttachment.yml)}
    IP: ${file(./aws/resources/network/IP.yml)}
    InternetGateway: ${file(./aws/resources/network/InternetGateway.yml)}
    NatGateway: ${file(./aws/resources/network/NatGateway.yml)}

    PublicSubnetA: ${file(./aws/resources/network/Subnet/PublicSubnetA.yml)}
    PrivateSubnetA: ${file(./aws/resources/network/Subnet/PrivateSubnetA.yml)}
    PrivateSubnetB: ${file(./aws/resources/network/Subnet/PrivateSubnetB.yml)}

    ServerlessSecurityGroup: ${file(./aws/resources/network/SecurityGroup/ServerlessSecurityGroup.yml)}
    ServerlessStorageSecurityGroup: ${file(./aws/resources/network/SecurityGroup/ServerlessStorageSecurityGroup.yml)}

    PublicRouteTable: ${file(./aws/resources/network/RouteTable/PublicRouteTable.yml)}
    PublicRoute: ${file(./aws/resources/network/RouteTable/PublicRoute.yml)}
    PrivateRouteTable: ${file(./aws/resources/network/RouteTable/PrivateRouteTable.yml)}
    PrivateRoute: ${file(./aws/resources/network/RouteTable/PrivateRoute.yml)}

    PrivateRouteATableAssociation: ${file(./aws/resources/network/RouteTable/PrivateSubnetARouteTableAssociation.yml)}
    PrivateRouteBTableAssociation: ${file(./aws/resources/network/RouteTable/PrivateSubnetBRouteTableAssociation.yml)}
    PublicRouteATableAssociation: ${file(./aws/resources/network/RouteTable/PublicSubnetARouteTableAssociation.yml)}

    # S3
    ListingProfileS3Bucket: ${file(./aws/resources/s3/ListingProfileBucket.yml)}

    # Elasticache
    CacheSubnetGroup: ${file(./aws/resources/elasticache/CacheSubnetGroup.yml)}
    CacheCluster: ${file(./aws/resources/elasticache/session/CacheCluster.yml)}

    # RDS
    RDSSubnetGroup: ${file(./aws/resources/rds/RDSSubnetGroup.yml)}
    RDSClusterParameter: ${file(./aws/resources/rds/RDSClusterParameter.yml)}
    RDSInstanceParameter: ${file(./aws/resources/rds/RDSInstanceParameter.yml)}
    UserRDSCluster: ${file(./aws/resources/rds/user/RDSCluster.yml)}
    UserRDSInstance: ${file(./aws/resources/rds/user/RDSInstance.yml)}
    ListingRDSCluster: ${file(./aws/resources/rds/listing/RDSCluster.yml)}
    ListingRDSInstance: ${file(./aws/resources/rds/listing/RDSInstance.yml)}
    ItemRDSCluster: ${file(./aws/resources/rds/item/RDSCluster.yml)}
    ItemRDSInstance: ${file(./aws/resources/rds/item/RDSInstance.yml)}

    # DynamoDBTable
    BookingDynamoDBTable: ${file(./aws/resources/dynamodb/BookingTable.yml)}

    # SNS Topic
    SNSTopicItemCreated: ${file(./aws/resources/sns/topic/item/SNSTopicItemSaved.yml)}

    # SQS
    UserSNSSubscriptionItemSaved: ${file(./aws/resources/sqs/user/SNSSubscriptionItemSaved.yml)}
    UserSQSQueue: ${file(./aws/resources/sqs/user/SQSQueue.yml)}
    UserSQSDLQueue: ${file(./aws/resources/sqs/user/SQSDLQueue.yml)}
    UserSQSQueuePolicy: ${file(./aws/resources/sqs/user/SQSQueuePolicy.yml)}

    ListingSNSSubscriptionItemSaved: ${file(./aws/resources/sqs/listing/SNSSubscriptionItemSaved.yml)}
    ListingSQSQueue: ${file(./aws/resources/sqs/listing/SQSQueue.yml)}
    ListingSQSDLQueue: ${file(./aws/resources/sqs/listing/SQSDLQueue.yml)}
    ListingSQSQueuePolicy: ${file(./aws/resources/sqs/listing/SQSQueuePolicy.yml)}

    # IAM
    LambdaRole: ${file(./aws/resources/iam/LambdaRole.yml)}
  Outputs: ${file(./aws/outputs.yml)}
