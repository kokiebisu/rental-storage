{
  "service": {
    "service": "rental-storage-infrastructure",
    "serviceObject": {
      "name": "rental-storage-infrastructure"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "stage": "dev",
      "region": "us-east-1",
      "lambdaHashingVersion": "20201221",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ServerlessInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessInternetGateway"
                }
              ]
            }
          },
          "ServerlessVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "10.0.0.0/16",
              "EnableDnsSupport": true,
              "EnableDnsHostnames": true,
              "InstanceTenancy": "default",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessVPC"
                }
              ]
            }
          },
          "ServerlessVPCGA": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "InternetGatewayId": {
                "Ref": "ServerlessInternetGateway"
              }
            }
          },
          "ServerlessSubnetA": {
            "DependsOn": [
              "ServerlessVPC"
            ],
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "AvailabilityZone": "us-east-1a",
              "CidrBlock": "10.0.0.0/24",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessSubnetA"
                }
              ]
            }
          },
          "ServerlessSubnetB": {
            "DependsOn": [
              "ServerlessVPC"
            ],
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "AvailabilityZone": "us-east-1b",
              "CidrBlock": "10.0.1.0/24",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessSubnetB"
                }
              ]
            }
          },
          "ServerlessSubnetC": {
            "DependsOn": [
              "ServerlessVPC"
            ],
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "AvailabilityZone": "us-east-1c",
              "CidrBlock": "10.0.2.0/24",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessSubnetC"
                }
              ]
            }
          },
          "ServerlessSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
              "DBSubnetGroupDescription": "RDS Subnet Group",
              "SubnetIds": [
                {
                  "Ref": "ServerlessSubnetA"
                },
                {
                  "Ref": "ServerlessSubnetB"
                },
                {
                  "Ref": "ServerlessSubnetC"
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessSubnetGroup"
                }
              ]
            }
          },
          "ServerlessSecurityGroup": {
            "DependsOn": [
              "ServerlessVPC"
            ],
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "SecurityGroup for Serverless Functions",
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "SecurityGroupIngress": [
                {
                  "IpProtocol": "tcp",
                  "FromPort": "0",
                  "ToPort": "65535",
                  "CidrIp": "0.0.0.0/0"
                }
              ],
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "ServerlessSecurityGroup"
                }
              ]
            }
          },
          "RouteTablePublic": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "public-route"
                }
              ]
            }
          },
          "RoutePublic": {
            "Type": "AWS::EC2::Route",
            "Properties": {
              "DestinationCidrBlock": "0.0.0.0/0",
              "GatewayId": {
                "Ref": "ServerlessInternetGateway"
              },
              "RouteTableId": {
                "Ref": "RouteTablePublic"
              }
            }
          },
          "RouteTableAssociationSubnetA": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "RouteTablePublic"
              },
              "SubnetId": {
                "Ref": "ServerlessSubnetA"
              }
            }
          },
          "RouteTableAssociationSubnetB": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "RouteTablePublic"
              },
              "SubnetId": {
                "Ref": "ServerlessSubnetB"
              }
            }
          },
          "RouteTableAssociationSubnetC": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
              "RouteTableId": {
                "Ref": "RouteTablePublic"
              },
              "SubnetId": {
                "Ref": "ServerlessSubnetC"
              }
            }
          },
          "AuroraRDSClusterParameter": {
            "Type": "AWS::RDS::DBClusterParameterGroup",
            "Properties": {
              "Description": "Parameter group for the Serverless Aurora RDS DB.",
              "Family": "aurora5.6",
              "Parameters": {
                "character_set_database": "utf32"
              }
            }
          },
          "AuroraRDSInstanceParameter": {
            "Type": "AWS::RDS::DBParameterGroup",
            "Properties": {
              "Description": "Parameter group for the Serverless Aurora RDS DB.",
              "Family": "aurora5.6",
              "Parameters": {
                "sql_mode": "IGNORE_SPACE",
                "max_connections": 100,
                "wait_timeout": 900,
                "interactive_timeout": 900
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-rental-storage-infrastructure-dev-ServerlessDeploymentBucketName"
            }
          },
          "ServerlessSecurityGroup": {
            "Description": "Serverless Security Group",
            "Value": {
              "Ref": "ServerlessSecurityGroup"
            },
            "Export": {
              "Name": "ExportedServerlessSecurityGroup"
            }
          },
          "ServerlessSubnetGroup": {
            "Description": "Serverless Subnet Group",
            "Value": {
              "Ref": "ServerlessSubnetGroup"
            },
            "Export": {
              "Name": "ExportedServerlessSubnetGroup"
            }
          },
          "ServerlessVPCGA": {
            "Description": "Serverless VPCGA",
            "Value": {
              "Ref": "ServerlessVPCGA"
            },
            "Export": {
              "Name": "ExportedServerlessVPCGA"
            }
          },
          "AuroraRDSInstanceParameter": {
            "Description": "Aurora RDS Instance Parameter",
            "Value": {
              "Ref": "AuroraRDSInstanceParameter"
            },
            "Export": {
              "Name": "ExportedAuroraRDSInstanceParameter"
            }
          },
          "AuroraRDSClusterParameter": {
            "Description": "Aurora RDS Cluster Parameter",
            "Value": {
              "Ref": "AuroraRDSClusterParameter"
            },
            "Export": {
              "Name": "ExportedAuroraRDSClusterParameter"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "custom": {
      "service": "rental-storage"
    },
    "plugins": [
      "serverless-export-outputs"
    ],
    "pluginsData": {},
    "functions": {},
    "resources": {
      "Resources": {
        "ServerlessInternetGateway": {
          "Type": "AWS::EC2::InternetGateway",
          "Properties": {
            "Tags": [
              {
                "Key": "Name",
                "Value": "ServerlessInternetGateway"
              }
            ]
          }
        },
        "ServerlessVPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": "10.0.0.0/16",
            "EnableDnsSupport": true,
            "EnableDnsHostnames": true,
            "InstanceTenancy": "default",
            "Tags": [
              {
                "Key": "Name",
                "Value": "ServerlessVPC"
              }
            ]
          }
        },
        "ServerlessVPCGA": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "InternetGatewayId": {
              "Ref": "ServerlessInternetGateway"
            }
          }
        },
        "ServerlessSubnetA": {
          "DependsOn": [
            "ServerlessVPC"
          ],
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "AvailabilityZone": "us-east-1a",
            "CidrBlock": "10.0.0.0/24",
            "Tags": [
              {
                "Key": "Name",
                "Value": "ServerlessSubnetA"
              }
            ]
          }
        },
        "ServerlessSubnetB": {
          "DependsOn": [
            "ServerlessVPC"
          ],
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "AvailabilityZone": "us-east-1b",
            "CidrBlock": "10.0.1.0/24",
            "Tags": [
              {
                "Key": "Name",
                "Value": "ServerlessSubnetB"
              }
            ]
          }
        },
        "ServerlessSubnetC": {
          "DependsOn": [
            "ServerlessVPC"
          ],
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "AvailabilityZone": "us-east-1c",
            "CidrBlock": "10.0.2.0/24",
            "Tags": [
              {
                "Key": "Name",
                "Value": "ServerlessSubnetC"
              }
            ]
          }
        },
        "ServerlessSubnetGroup": {
          "Type": "AWS::RDS::DBSubnetGroup",
          "Properties": {
            "DBSubnetGroupDescription": "RDS Subnet Group",
            "SubnetIds": [
              {
                "Ref": "ServerlessSubnetA"
              },
              {
                "Ref": "ServerlessSubnetB"
              },
              {
                "Ref": "ServerlessSubnetC"
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": "ServerlessSubnetGroup"
              }
            ]
          }
        },
        "ServerlessSecurityGroup": {
          "DependsOn": [
            "ServerlessVPC"
          ],
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "SecurityGroup for Serverless Functions",
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": "0",
                "ToPort": "65535",
                "CidrIp": "0.0.0.0/0"
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": "ServerlessSecurityGroup"
              }
            ]
          }
        },
        "RouteTablePublic": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "public-route"
              }
            ]
          }
        },
        "RoutePublic": {
          "Type": "AWS::EC2::Route",
          "Properties": {
            "DestinationCidrBlock": "0.0.0.0/0",
            "GatewayId": {
              "Ref": "ServerlessInternetGateway"
            },
            "RouteTableId": {
              "Ref": "RouteTablePublic"
            }
          }
        },
        "RouteTableAssociationSubnetA": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "RouteTablePublic"
            },
            "SubnetId": {
              "Ref": "ServerlessSubnetA"
            }
          }
        },
        "RouteTableAssociationSubnetB": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "RouteTablePublic"
            },
            "SubnetId": {
              "Ref": "ServerlessSubnetB"
            }
          }
        },
        "RouteTableAssociationSubnetC": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "RouteTablePublic"
            },
            "SubnetId": {
              "Ref": "ServerlessSubnetC"
            }
          }
        },
        "AuroraRDSClusterParameter": {
          "Type": "AWS::RDS::DBClusterParameterGroup",
          "Properties": {
            "Description": "Parameter group for the Serverless Aurora RDS DB.",
            "Family": "aurora5.6",
            "Parameters": {
              "character_set_database": "utf32"
            }
          }
        },
        "AuroraRDSInstanceParameter": {
          "Type": "AWS::RDS::DBParameterGroup",
          "Properties": {
            "Description": "Parameter group for the Serverless Aurora RDS DB.",
            "Family": "aurora5.6",
            "Parameters": {
              "sql_mode": "IGNORE_SPACE",
              "max_connections": 100,
              "wait_timeout": 900,
              "interactive_timeout": 900
            }
          }
        }
      },
      "Outputs": {
        "ServerlessSecurityGroup": {
          "Description": "Serverless Security Group",
          "Value": {
            "Ref": "ServerlessSecurityGroup"
          },
          "Export": {
            "Name": "ExportedServerlessSecurityGroup"
          }
        },
        "ServerlessSubnetGroup": {
          "Description": "Serverless Subnet Group",
          "Value": {
            "Ref": "ServerlessSubnetGroup"
          },
          "Export": {
            "Name": "ExportedServerlessSubnetGroup"
          }
        },
        "ServerlessVPCGA": {
          "Description": "Serverless VPCGA",
          "Value": {
            "Ref": "ServerlessVPCGA"
          },
          "Export": {
            "Name": "ExportedServerlessVPCGA"
          }
        },
        "AuroraRDSInstanceParameter": {
          "Description": "Aurora RDS Instance Parameter",
          "Value": {
            "Ref": "AuroraRDSInstanceParameter"
          },
          "Export": {
            "Name": "ExportedAuroraRDSInstanceParameter"
          }
        },
        "AuroraRDSClusterParameter": {
          "Description": "Aurora RDS Cluster Parameter",
          "Value": {
            "Ref": "AuroraRDSClusterParameter"
          },
          "Export": {
            "Name": "ExportedAuroraRDSClusterParameter"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "rental-storage-infrastructure",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/rental-storage-infrastructure/dev/1663736031260-2022-09-21T04:53:51.260Z",
    "artifact": ""
  }
}