on:
  workflow_call:

jobs:
  run-setup:
    name: Setup environment
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            package:
              - 'packages/composition/**'

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 6.0.2

      - name: Install root packages
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        if: steps.changes.outputs.package == 'true'

      - name: Install dependencies
        run: |
          cd packages/composition
          pnpm install --frozen-lockfile
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - name: Generate env files
        run: |
          cd packages/composition
          pnpm run generate:env:dev
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - uses: actions/upload-artifact@v3
        with:
          name: env-composition-${{ github.sha }}
          path: packages/composition/.env
          retention-days: 1
        if: steps.changes.outputs.package == 'true'

  run-integration-test:
    name: Composition
    needs: [setup]
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            package:
              - 'packages/composition/**'

      - name: Install global dependencies
        run: |
          npm install -g pnpm
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - name: Install dependencies
        run: |
          cd packages/composition
          pnpm install --frozen-lockfile
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - uses: actions/download-artifact@v3
        with:
          name: dist-composition-${{ github.sha }}
          path: packages/composition/dist
        if: steps.changes.outputs.package == 'true'

      - uses: geekyeggo/delete-artifact@v2
        with:
          name: dist-composition-${{ github.sha }}
        if: steps.changes.outputs.package == 'true'

      - uses: actions/download-artifact@v3
        with:
          name: env-composition-${{ github.sha }}
          path: packages/composition
        if: steps.changes.outputs.package == 'true'

      - uses: geekyeggo/delete-artifact@v2
        with:
          name: env-composition-${{ github.sha }}
        if: steps.changes.outputs.package == 'true'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        if: steps.changes.outputs.package == 'true'

      - name: Run test
        run: |
          cd packages/composition
          pnpm run test:integration
        if: steps.changes.outputs.package == 'true'
