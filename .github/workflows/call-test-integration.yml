on: workflow_call

jobs:
  # unit-test-python:
  #   name: Python
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       package:
  #         - image
  #         - slack
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - uses: dorny/paths-filter@v2
  #       id: changes
  #       with:
  #         filters: |
  #           package:
  #             - 'packages/service-${{ matrix.package }}/**'

  integration-test-go:
    name: Go
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - authentication
          - authorizer
          - booking
          - space
          - user
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            package:
              - 'packages/service-${{ matrix.package }}/**'

      - uses: actions/setup-go@v3
        with:
          go-version: "^1.13.1"
        if: steps.changes.outputs.package == 'true'

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile=rental-storage
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile=rental-storage
          aws configure set region us-east-1 --profile=rental-storage
          aws configure set output json --profile=rental-storage
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - name: Check
        run: |
          cd ~/.aws
          cat config
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - name: Run Docker-Compose (Mock server)
        run: |
          cd packages/server-mock
          make deps-start
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - name: Run Docker-Compose (Service)
        run: |
          cd packages/service-${{ matrix.package }}
          make deps-start
        shell: bash
        if: steps.changes.outputs.package == 'true' && matrix.package != 'authorizer'

      - name: Test service
        run: |
          cd packages/service-${{ matrix.package }}
          make test-integration
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - name: Docker Compose cleanup (mock server)
        run: |
          cd packages/server-mock
          make deps-stop
        shell: bash
        if: steps.changes.outputs.package == 'true'

      - name: Docker Compose cleanup (service)
        run: |
          cd packages/service-${{ matrix.package }}
          make deps-stop
        shell: bash
        if: steps.changes.outputs.package == 'true' && matrix.package != 'authorizer'
