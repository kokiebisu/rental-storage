on:
  workflow_call:

jobs:
  setup:
    name: Setup environment
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Retrieve cache
        uses: ./.github/actions/retrieve-cache

      - name: Generate env files
        run: npm run generate:env:dev
        shell: bash

  integration-test-typescript:
    name: Typescript
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - booking
          - listings
          - user
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve cache
        uses: ./.github/actions/retrieve-cache

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Test ${{ matrix.package }} service
        run: |
          cd packages/service-${{ matrix.package }}
          npm run test:integration

  integration-test-python:
    name: Python
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - image
          - slack
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install global dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
        shell: bash

      - name: Test ${{ matrix.package }} service
        run: |
          cd packages/service-${{ matrix.package }}
          pip install -r requirements.txt
          make integration-test
        shell: bash

  integration-test-go:
    name: Go
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - authorizer
          - authentication
          - payment
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve cache
        uses: ./.github/actions/retrieve-cache

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Test ${{ matrix.package }} service
        run: |
          cd packages/service-${{ matrix.package }}
          make integration-test
        shell: bash
